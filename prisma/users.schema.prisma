// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./usersClient"
}

datasource db {
  provider = "mysql"
  url      = env("USERS_DB_URL")
}

model Users {
  userId    Int      @id @default(autoincrement()) @map("user_id")
  id        String   @unique @map("id")
  password  String   @map("password")
  name      String   @map("name")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  Characters Characters[]

  @@map("users")
}

model Characters {
  characterId    String @id @default(uuid()) @map("character_id")
  UserId         Int    @map("user_id")
  characterName  String @unique @map("character_name")
  characterMoney Int    @default(10000) @map("character_money")

  User          Users           @relation(fields: [UserId], references: [userId], onDelete: Cascade)
  CharacterStat CharacterStats?
  Inventory     Inventories[]
  Equipment     Equipments[]

  @@map("characters")
}

model CharacterStats {
  characterStatId Int    @id @default(autoincrement()) @map("character_stat_id")
  CharacterId     String @unique @map("character_id")
  health          Int    @default(500) @map("health")
  power           Int    @default(100) @map("power")

  Character Characters @relation(fields: [CharacterId], references: [characterId], onDelete: Cascade)

  @@map("character_stats")
}

model Inventories {
  inventoryId Int    @id @default(autoincrement()) @map("inventory_id")
  CharacterId String @map("character_id")
  itemCode    Int    @map("item_code")
  itemCount   Int    @map("item_count")

  Character Characters @relation(fields: [CharacterId], references: [characterId], onDelete: Cascade)

  @@map("inventories")
}

model Equipments {
  equipmentId Int    @id @default(autoincrement()) @map("equipment_id")
  CharacterId String @map("character_id")
  itemCode    Int    @map("item_code")

  Character Characters @relation(fields: [CharacterId], references: [characterId], onDelete: Cascade)

  @@map("equipments")
}
